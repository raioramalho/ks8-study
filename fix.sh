#!/bin/bash

LOG_FILE="/tmp/k8s_fix.log"
echo "" > $LOG_FILE

log_info() {
    echo -e "[INFO] $1" | tee -a $LOG_FILE
}

log_success() {
    echo -e "[‚úÖ SUCCESS] $1" | tee -a $LOG_FILE
}

log_warning() {
    echo -e "[‚ö†Ô∏è WARNING] $1" | tee -a $LOG_FILE
}

log_error() {
    echo -e "[‚ùå ERROR] $1" | tee -a $LOG_FILE
}

log_info "üöÄ Iniciando corre√ß√£o do Kubernetes e Calico..."

# 1Ô∏è‚É£ Verificar se kubectl est√° instalado
log_info "üîé Verificando se o kubectl est√° instalado..."
if ! command -v kubectl &> /dev/null; then
    log_error "kubectl n√£o encontrado! Instale antes de continuar."
    exit 1
else
    log_success "kubectl est√° instalado!"
fi

# 2Ô∏è‚É£ Verificar acesso ao cluster
log_info "üîé Testando conex√£o com o cluster..."
if ! kubectl get nodes &> /dev/null; then
    log_error "N√£o foi poss√≠vel conectar ao cluster! Verifique sua configura√ß√£o do kubeconfig."
    exit 1
else
    log_success "Conex√£o com o cluster Kubernetes OK!"
fi

# 3Ô∏è‚É£ Verificar status dos n√≥s
log_info "üîé Verificando status dos n√≥s..."
kubectl get nodes | tee -a $LOG_FILE
if kubectl get nodes | grep -q "NotReady"; then
    log_warning "Alguns n√≥s est√£o em estado NotReady! ‚ö†Ô∏è Tentando corrigir..."
    sudo systemctl restart kubelet
    sleep 10
    if kubectl get nodes | grep -q "NotReady"; then
        log_error "O n√≥ ainda est√° NotReady! Verifique manualmente."
    else
        log_success "O n√≥ agora est√° Ready!"
    fi
else
    log_success "Todos os n√≥s est√£o prontos!"
fi

# 4Ô∏è‚É£ Verificar pods do Calico
log_info "üîé Verificando status do Calico..."
if ! kubectl get pods -n kube-system | grep -q "calico"; then
    log_error "Calico n√£o encontrado! Instalando..."
    kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
    sleep 10
fi

if kubectl get pods -n kube-system | grep calico | grep -q -E 'Init|Error|CrashLoopBackOff'; then
    log_warning "‚ö†Ô∏è Alguns pods do Calico est√£o com erro! Tentando reiniciar..."
    kubectl delete pod -n kube-system -l k8s-app=calico-node
    sleep 10
    if kubectl get pods -n kube-system | grep calico | grep -q "Running"; then
        log_success "Calico est√° rodando corretamente!"
    else
        log_error "Calico ainda tem problemas! Verifique logs com: kubectl logs -n kube-system -l k8s-app=calico-node"
    fi
else
    log_success "Calico est√° rodando corretamente!"
fi

# 5Ô∏è‚É£ Verificar e corrigir CoreDNS
log_info "üîé Verificando CoreDNS..."
if kubectl get pods -n kube-system | grep coredns | grep -q -E 'Init|Error|CrashLoopBackOff'; then
    log_warning "‚ö†Ô∏è CoreDNS n√£o est√° rodando corretamente! Tentando reiniciar..."
    kubectl delete pod -n kube-system -l k8s-app=kube-dns
    sleep 10
    if kubectl get pods -n kube-system | grep coredns | grep -q "Running"; then
        log_success "CoreDNS voltou ao normal!"
    else
        log_error "CoreDNS ainda tem problemas! Verifique logs com: kubectl logs -n kube-system -l k8s-app=kube-dns"
    fi
else
    log_success "CoreDNS est√° rodando corretamente!"
fi

# 6Ô∏è‚É£ Limpeza final
log_info "üßπ Limpando pods com falha..."
kubectl delete pod -n kube-system --field-selector=status.phase=Failed --ignore-not-found=true
log_success "Pods com falha removidos!"

log_info "üîÑ Reiniciando servi√ßos essenciais..."
sudo systemctl restart containerd kubelet
sleep 10
log_success "Servi√ßos reiniciados!"

log_success "üéâ Corre√ß√£o conclu√≠da! Verifique os resultados com: kubectl get nodes e kubectl get pods -n kube-system"
